{
  "name": "trosyn-ai",
  "version": "1.0.0",
  "description": "Trosyn AI Editor - A Notion-style rich text editor with AI capabilities",
  "main": "./dist/main/cjs-entry.cjs",
  "scripts": {
    "dev": "vite",
    "build:main": "tsc -p tsconfig.main.json",
    "build:renderer": "vite build",
    "build": "rm -rf dist && npm run build:main && npm run build:renderer",
    "preview": "vite preview",
    "start": "electron .",
    "dev:electron": "node scripts/port-manager.js",
    "dev:legacy": "concurrently -k \"vite --port 3001\" \"wait-on http://localhost:3001 && cross-env NODE_ENV=development electron . --no-modules\"",
    "electron:build": "npm run build && electron-builder",
    "test": "vitest run test/components/Editor.test.tsx",
    "test:watch": "vitest watch test/components/Editor.test.tsx",
    "test:all": "vitest",
    "test:ui": "vitest --ui test/components/Editor.test.tsx",
    "test:coverage": "vitest run --coverage test/components/Editor.test.tsx",
    "kill:ports": "kill-port 3001 3002 3003 3004 3005",
    "predev": "yarn kill:ports",
    "predev:electron": "yarn kill:ports",
    "check:ports": "lsof -i :3001 || echo 'Port 3001 is available'"
  },
  "keywords": [
    "editor",
    "ai",
    "electron",
    "vue",
    "typescript"
  ],
  "author": "Trosyn AI Team",
  "license": "MIT",
  "type": "commonjs",
  "exports": {
    ".": {
      "import": "./dist/main/index.js",
      "types": "./dist/main/index.d.ts"
    }
  },
  "devDependencies": {
    "@electron/rebuild": "^4.0.1",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/chai": "^5.2.2",
    "@types/electron": "^1.6.12",
    "@types/electron-squirrel-startup": "^1.0.2",
    "@types/jest": "^30.0.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "^24.0.10",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@types/resize-observer-browser": "^0.1.11",
    "@types/testing-library__jest-dom": "^5.14.9",
    "@vitejs/plugin-react": "^4.6.0",
    "@vitejs/plugin-vue": "^5.0.0",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "@vue/compiler-sfc": "^3.4.0",
    "@vue/runtime-dom": "^3.5.17",
    "chai": "^5.2.0",
    "concurrently": "^8.2.0",
    "cross-env": "^7.0.3",
    "cypress": "^14.5.0",
    "cypress-axe": "^1.6.0",
    "cypress-file-upload": "^5.0.8",
    "cypress-real-events": "^1.14.0",
    "cypress-wait-until": "^3.0.2",
    "electron-builder": "^24.13.3",
    "electron-reloader": "^1.2.3",
    "electron-squirrel-startup": "^1.0.1",
    "jest-environment-jsdom": "^30.0.4",
    "jsdom": "^26.1.0",
    "kill-port": "^2.0.1",
    "mocha": "^11.7.1",
    "msw": "^2.10.3",
    "portfinder": "^1.0.37",
    "resize-observer-polyfill": "^1.5.1",
    "terser": "^5.43.1",
    "ts-jest": "^29.4.0",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.0.0",
    "vite": "5.0.0",
    "vite-plugin-electron": "^0.14.0",
    "vitest": "^3.2.4",
    "wait-on": "^7.2.0"
  },
  "dependencies": {
    "@editorjs/checklist": "^1.6.0",
    "@editorjs/code": "^2.9.3",
    "@editorjs/editorjs": "^2.30.8",
    "@editorjs/header": "^2.8.8",
    "@editorjs/image": "^2.8.0",
    "@editorjs/list": "^1.10.0",
    "@editorjs/quote": "^2.7.6",
    "@editorjs/table": "^2.4.5",
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.1",
    "@mui/material": "^7.2.0",
    "@types/better-sqlite3": "^7.6.13",
    "better-sqlite3": "^12.2.0",
    "electron": "^37.2.0",
    "notistack": "^3.0.2",
    "pinia": "^3.0.3",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-router-dom": "^7.6.3",
    "vue": "^3.3.0"
  },
  "build": {
    "appId": "com.trosyn.editor",
    "productName": "Trosyn AI Editor",
    "directories": {
      "output": "release/${version}",
      "buildResources": "build"
    },
    "files": [
      "dist/**/*"
    ],
    "win": {
      "target": [
        "nsis"
      ],
      "icon": "build/icon.ico"
    },
    "mac": {
      "target": [
        "dmg"
      ],
      "icon": "build/icon.icns"
    },
    "linux": {
      "target": [
        "AppImage",
        "deb"
      ],
      "icon": "build/icon.png"
    }
  }
}
