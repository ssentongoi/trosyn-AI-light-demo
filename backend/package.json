{
  "name": "backend",
  "version": "1.0.0",
  "type": "module",
  "description": "Backend for Trosyn AI integration",
  "main": "dist/index.js",
  "scripts": {
    "test": "NODE_OPTIONS=--experimental-vm-modules jest",
    "test:watch": "NODE_OPTIONS='--experimental-vm-modules --no-warnings' jest --config=jest.config.cjs --watch",
    "test:coverage": "NODE_OPTIONS='--experimental-vm-modules --no-warnings' jest --config=jest.config.cjs --coverage",
    "test:llama": "NODE_OPTIONS='--experimental-vm-modules --no-warnings' tsx scripts/test-llama-integration.ts",
    "test:spellcheck": "NODE_OPTIONS='--experimental-vm-modules --no-warnings' jest --config=jest.config.cjs tests/ai/spellcheck.test.ts",
    "build": "tsc",
    "start": "node --experimental-specifier-resolution=node dist/index.js",
    "start:llama": "bash ../scripts/start-llama-server.sh",
    "dev": "NODE_OPTIONS='--experimental-vm-modules --no-warnings' tsx watch index.ts",
    "dev:with-llama": "concurrently -n 'LLAMA_SERVER,DEV_SERVER' -c 'bgBlue.bold,bgGreen.bold' \"npm run start:llama\" \"npm run dev\""
  },
  "engines": {
    "node": ">=14.0.0"
  },
  "dependencies": {
    "concurrently": "^8.2.2",
    "cors": "^2.8.5",
    "dotenv": "^16.6.1",
    "express": "^4.18.2",
    "node-fetch": "^3.3.2"
  },
  "devDependencies": {
    "@babel/core": "^7.28.0",
    "@babel/plugin-transform-modules-commonjs": "^7.27.1",
    "@babel/preset-env": "^7.28.0",
    "@babel/preset-typescript": "^7.27.1",
    "@swc/core": "^1.13.2",
    "@swc/jest": "^0.2.39",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "jest": "^29.5.0",
    "ts-jest": "^29.1.0",
    "ts-node": "^10.9.1",
    "ts-node-dev": "^2.0.0",
    "tsx": "^4.20.3",
    "typescript": "^5.0.4"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/tests"
    ],
    "testMatch": [
      "**/*.test.ts"
    ],
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ],
    "collectCoverageFrom": [
      "src/**/*.{ts,tsx}",
      "!**/node_modules/**",
      "!**/vendor/**"
    ]
  }
}
